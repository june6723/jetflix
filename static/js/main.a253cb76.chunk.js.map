{"version":3,"sources":["Assets/noPosterSmall.png","Components/Header.js","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["module","exports","Header","styled","header","List","ul","Item","li","props","current","SLink","Link","withRouter","pathname","location","includes","to","Container","div","Title","span","Grid","Section","title","children","role","aria-label","Text","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","id","imageUrl","rating","year","isMovie","require","HomePresenter","nowPlaying","upComing","popular","error","loading","Helmet","Loader","length","map","movie","key","original_title","poster_path","vote_average","release_date","substring","api","axios","create","baseURL","params","api_key","language","moviesApi","get","append_to_response","term","query","encodeURIComponent","tvApi","HomeContainer","state","data","results","this","setState","React","Component","TVPresenter","topRated","airingToday","tv","original_name","first_air_date","TVContainer","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","pastTerm","onSubmit","placeholder","value","onChange","SearchContainer","event","preventDefault","searchByTerm","target","a","Backdrop","bgImg","Content","Cover","Data","h3","ItemContainer","Divider","Overview","p","Trailer","iframe","DetailPresenter","result","videos","backdrop_path","runtime","episode_run_time","genres","genre","index","name","overview","src","DetailContainer","match","push","history","parsedId","Number","isNaN","console","log","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a253cb76.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noPosterSmall.87a0eb6a.png\";","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Header = styled.header`\n  color: white;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 50px;\n  display: flex;\n  align-items: center;\n  background-color: rgba(20, 20, 20, 0.8);\n  z-index: 10;\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\n`;\n\nconst List = styled.ul`\n  display: flex;\n`;\n\nconst Item = styled.li`\n  width: 80px;\n  height: 50px;\n  text-align: center;\n  border-bottom: 3px solid\n    ${(props) => (props.current ? \"#3498db\" : \"transparent\")};\n  transition: border-bottom 0.3s ease-in-out;\n`;\n\nconst SLink = styled(Link)`\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport default withRouter(({ location: { pathname } }) => (\n  <Header>\n    <List>\n      <Item current={pathname === \"/\" || pathname.includes(\"/movie\")}>\n        <SLink to=\"/\">Movies</SLink>\n      </Item>\n      <Item current={pathname.includes(\"/tv\")}>\n        <SLink to=\"/tv\">TV</SLink>\n      </Item>\n      <Item current={pathname === \"/search\"}>\n        <SLink to=\"/search\">Search</SLink>\n      </Item>\n    </List>\n  </Header>\n));\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  :not(:last-child) {\n    margin-bottom: 50px;\n  }\n`;\n\nconst Title = styled.span`\n  font-size: 14px;\n  font-weight: 600;\n`;\n\nconst Grid = styled.div`\n  margin-top: 25px;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 125px);\n  grid-gap: 25px;\n`;\n\nconst Section = ({ title, children }) => (\n  <Container>\n    <Title>{title}</Title>\n    <Grid>{children}</Grid>\n  </Container>\n);\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n};\n\nexport default Section;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  font-size: 28px;\n  margin-top: 20px;\n`;\n\nexport default () => (\n  <Container>\n    <span role=\"img\" aria-label=\"Loading\">\n      ⏰\n    </span>\n  </Container>\n);\n","import React from \"react\";\nimport PropTyeps from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n`;\n\nconst Text = styled.span`\n  color: ${(props) => props.color};\n`;\n\nconst Message = ({ text, color }) => (\n  <Container>\n    <Text color={color}>{text}</Text>\n  </Container>\n);\n\nMessage.propTypes = {\n  text: PropTyeps.string.isRequired,\n  color: PropTyeps.string.isRequired,\n};\n\nexport default Message;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  font-size: 12px;\n  position: relative;\n`;\n\nconst Image = styled.div`\n  background-image: url(${(props) => props.bgUrl});\n  height: 180px;\n  background-size: cover;\n  border-radius: 4px;\n  background-position: center center;\n  transition: opacity 0.1s linear;\n`;\n\nconst Rating = styled.span`\n  bottom: 5px;\n  right: 5px;\n  position: absolute;\n  opacity: 0;\n`;\n\nconst ImageContainer = styled.div`\n  margin-bottom: 5px;\n  position: relative;\n  &:hover {\n    ${Image} {\n      opacity: 0.3;\n    }\n    ${Rating} {\n      opacity: 1;\n      transition: opacity 0.1s linear;\n    }\n  }\n`;\n\nconst Title = styled.span`\n  display: block;\n  margin-bottom: 3px;\n  position: relative;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n`;\n\nconst Year = styled.span`\n  font-size: 10px;\n  color: rgba(255, 255, 255, 0.5);\n`;\n\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\n  <Link to={isMovie ? `/movie/${id}` : `/tv/${id}`}>\n    <Container>\n      <ImageContainer>\n        <Image\n          bgUrl={\n            imageUrl\n              ? `https://image.tmdb.org/t/p/w300/${imageUrl}`\n              : require(\"../Assets/noPosterSmall.png\")\n          }\n        />\n        <Rating>\n          <span role=\"img\" aria-label=\"rating\">\n            ⭐\n          </span>\n          {rating}/10\n        </Rating>\n      </ImageContainer>\n      <Title>{title}</Title>\n      <Year>{year}</Year>\n    </Container>\n  </Link>\n);\n\nPoster.propTypes = {\n  id: PropTypes.number.isRequired,\n  imageUrl: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  rating: PropTypes.number,\n  year: PropTypes.string,\n  isMovie: PropTypes.bool,\n};\n\nexport default Poster;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst HomePresenter = ({ nowPlaying, upComing, popular, error, loading }) => (\n  <>\n    <Helmet>\n      <title>Movies | Jetflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        {nowPlaying && nowPlaying.length > 0 && (\n          <Section title=\"Now Playing\">\n            {nowPlaying.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                title={movie.original_title}\n                imageUrl={movie.poster_path}\n                isMovie={true}\n                rating={movie.vote_average}\n                year={movie.release_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {upComing && upComing.length > 0 && (\n          <Section title=\"Upcoming Movies\">\n            {upComing.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                title={movie.original_title}\n                imageUrl={movie.poster_path}\n                isMovie={true}\n                rating={movie.vote_average}\n                year={movie.release_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular Movies\">\n            {popular.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                title={movie.original_title}\n                imageUrl={movie.poster_path}\n                isMovie={true}\n                rating={movie.vote_average}\n                year={movie.release_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n      </Container>\n    )}\n  </>\n);\n\nHomePresenter.propTypes = {\n  nowPlaying: PropTypes.array,\n  upComing: PropTypes.array,\n  popular: PropTypes.array,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n};\n\nexport default HomePresenter;\n","import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"https://api.themoviedb.org/3/\",\n  params: {\n    api_key: \"5676b58cfaa6d886ab2961006db436f7\",\n    language: \"en-US\",\n  },\n});\n\nexport const moviesApi = {\n  nowPlaying: () => api.get(\"movie/now_playing\"),\n  upComing: () => api.get(\"movie/upcoming\"),\n  popular: () => api.get(\"movie/popular\"),\n  movieDetail: (id) =>\n    api.get(`movie/${id}`, {\n      params: {\n        append_to_response: \"videos\",\n      },\n    }),\n  search: (term) =>\n    api.get(\"search/movie\", {\n      params: {\n        query: encodeURIComponent(term),\n      },\n    }),\n};\n\nexport const tvApi = {\n  topRated: () => api.get(\"tv/top_rated\"),\n  popular: () => api.get(\"tv/popular\"),\n  airingToday: () => api.get(\"tv/airing_today\"),\n  tvDetail: (id) =>\n    api.get(`tv/${id}`, {\n      params: {\n        append_to_response: \"videos\",\n      },\n    }),\n  search: (term) =>\n    api.get(\"search/tv\", {\n      params: {\n        query: encodeURIComponent(term),\n      },\n    }),\n};\n","import HomeContainer from \"./HomeContainer\";\n\nexport default HomeContainer;\n","import React from \"react\";\nimport HomePresenter from \"./HomePresenter\";\nimport { moviesApi } from \"api\";\n\nexport default class extends React.Component {\n  state = {\n    nowPlaying: null,\n    upComing: null,\n    popular: null,\n    error: null,\n    loading: true,\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: nowPlaying },\n      } = await moviesApi.nowPlaying();\n      const {\n        data: { results: upComing },\n      } = await moviesApi.upComing();\n      const {\n        data: { results: popular },\n      } = await moviesApi.popular();\n      this.setState({\n        nowPlaying,\n        upComing,\n        popular,\n      });\n    } catch {\n      this.setState({\n        error: \"Can't find movies information.\",\n      });\n    } finally {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  render() {\n    const { nowPlaying, upComing, popular, error, loading } = this.state;\n    return (\n      <HomePresenter\n        nowPlaying={nowPlaying}\n        upComing={upComing}\n        popular={popular}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst TVPresenter = ({ topRated, popular, airingToday, error, loading }) => (\n  <>\n    <Helmet>\n      <title>TV | Jetflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular Shows\">\n            {popular.map((tv) => (\n              <Poster\n                key={tv.id}\n                id={tv.id}\n                title={tv.original_name}\n                imageUrl={tv.poster_path}\n                rating={tv.vote_average}\n                year={tv.first_air_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {topRated && topRated.length > 0 && (\n          <Section title=\"Top Rated Shows\">\n            {topRated.map((tv) => (\n              <Poster\n                key={tv.id}\n                id={tv.id}\n                title={tv.original_name}\n                imageUrl={tv.poster_path}\n                rating={tv.vote_average}\n                year={tv.first_air_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {airingToday && airingToday.length > 0 && (\n          <Section title=\"Airing Today\">\n            {airingToday.map((tv) => (\n              <Poster\n                key={tv.id}\n                id={tv.id}\n                title={tv.original_name}\n                imageUrl={tv.poster_path}\n                rating={tv.vote_average}\n                year={tv.first_air_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n      </Container>\n    )}\n  </>\n);\n\nTVPresenter.propTypes = {\n  topRated: PropTypes.array,\n  popular: PropTypes.array,\n  airingToday: PropTypes.array,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n};\n\nexport default TVPresenter;\n","import TVContainer from \"./TVContainer\";\n\nexport default TVContainer;\n","import React from \"react\";\nimport TVPresenter from \"./TVPresenter\";\nimport { tvApi } from \"api\";\n\nexport default class extends React.Component {\n  state = {\n    topRated: null,\n    popular: null,\n    airingToday: null,\n    error: null,\n    loading: true,\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: topRated },\n      } = await tvApi.topRated();\n      const {\n        data: { results: popular },\n      } = await tvApi.popular();\n      const {\n        data: { results: airingToday },\n      } = await tvApi.airingToday();\n      this.setState({ topRated, popular, airingToday });\n    } catch {\n      this.setState({\n        error: \"Can't find TV information.\",\n      });\n    } finally {\n      this.setState({ loading: false });\n    }\n  }\n\n  render() {\n    const { topRated, popular, airingToday, error, loading } = this.state;\n    return (\n      <TVPresenter\n        topRated={topRated}\n        popular={popular}\n        airingToday={airingToday}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Loader from \"Components/Loader\";\nimport Section from \"Components/Section\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst Form = styled.form`\n  margin-bottom: 50px;\n  width: 100%;\n`;\n\nconst Input = styled.input`\n  all: unset;\n  font-size: 28px;\n  width: 100%;\n`;\n\nconst SearchPresenter = ({\n  movieResults,\n  tvResults,\n  searchTerm,\n  error,\n  loading,\n  handleSubmit,\n  updateTerm,\n  pastTerm,\n}) => (\n  <Container>\n    <Helmet>\n      <title>Search | Jetflix</title>\n    </Helmet>\n    <Form onSubmit={handleSubmit}>\n      <Input\n        placeholder=\"Search Movies or TV Shows...\"\n        value={searchTerm}\n        onChange={updateTerm}\n      ></Input>\n    </Form>\n    {loading ? (\n      <Loader />\n    ) : (\n      <>\n        {movieResults && movieResults.length > 0 && (\n          <Section title=\"Movie Results\">\n            {movieResults.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                title={movie.original_title}\n                imageUrl={movie.poster_path}\n                isMovie={true}\n                rating={movie.vote_average}\n                year={\n                  movie.release_date ? movie.release_date.substring(0, 4) : \"\"\n                }\n              />\n            ))}\n          </Section>\n        )}\n        {tvResults && tvResults.length > 0 && (\n          <Section title=\"TV Show Results\">\n            {tvResults.map((tv) => (\n              <Poster\n                key={tv.id}\n                id={tv.id}\n                title={tv.original_name}\n                imageUrl={tv.poster_path}\n                rating={tv.vote_average}\n                year={tv.first_air_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n        {tvResults &&\n          movieResults &&\n          tvResults.length === 0 &&\n          movieResults.length === 0 && (\n            <Message text={`Nothing found for: ${pastTerm}`} color=\"#bdc3c7\" />\n          )}\n      </>\n    )}\n  </Container>\n);\n\nSearchPresenter.propTypes = {\n  movieResults: PropTypes.array,\n  tvResults: PropTypes.array,\n  searchTerm: PropTypes.string,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  updateTerm: PropTypes.func.isRequired,\n  pastTerm: PropTypes.string,\n};\n\nexport default SearchPresenter;\n","import SearchContainer from \"./SearchContainer\";\n\nexport default SearchContainer;\n","import React from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\nimport { moviesApi } from \"api\";\nimport { tvApi } from \"api\";\n\nexport default class extends React.Component {\n  state = {\n    movieResults: null,\n    tvResults: null,\n    searchTerm: \"\",\n    error: null,\n    loading: false,\n    pastTerm: \"\",\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { searchTerm } = this.state;\n    if (searchTerm !== \"\") {\n      this.searchByTerm();\n      this.pastTerm = searchTerm;\n    }\n  };\n\n  updateTerm = (event) => {\n    const {\n      target: { value },\n    } = event;\n    this.setState({\n      searchTerm: value,\n    });\n  };\n\n  searchByTerm = async () => {\n    const { searchTerm } = this.state;\n    this.setState({ loading: true });\n    try {\n      const {\n        data: { results: movieResults },\n      } = await moviesApi.search(searchTerm);\n      const {\n        data: { results: tvResults },\n      } = await tvApi.search(searchTerm);\n      this.setState({\n        movieResults,\n        tvResults,\n      });\n      this.setState({ loading: true });\n    } catch {\n      this.setState({ error: \"Can't find results.\" });\n    } finally {\n      this.setState({ loading: false });\n    }\n  };\n\n  render() {\n    const { movieResults, tvResults, searchTerm, error, loading } = this.state;\n    return (\n      <SearchPresenter\n        movieResults={movieResults}\n        tvResults={tvResults}\n        searchTerm={searchTerm}\n        error={error}\n        loading={loading}\n        handleSubmit={this.handleSubmit}\n        updateTerm={this.updateTerm}\n        pastTerm={this.pastTerm}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\n\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  width: 100%;\n  position: relative;\n  padding: 50px;\n`;\n\nconst Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(${(props) => props.bgImg});\n  background-position: center center;\n  background-size: cover;\n  filter: blur(3px);\n  opacity: 0.5;\n  z-index: 0;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  width: 100%;\n  height: 100%;\n  position: relative;\n  z-index: 1;\n`;\n\nconst Cover = styled.div`\n  width: 30%;\n  height: 100%;\n  background-image: url(${(props) => props.bgImg});\n  background-position: center center;\n  background-size: cover;\n  border-radius: 5px;\n`;\n\nconst Data = styled.div`\n  width: 70%;\n  margin-left: 10px;\n`;\n\nconst Title = styled.h3`\n  font-size: 32px;\n`;\n\nconst ItemContainer = styled.div`\n  margin: 20px 0;\n`;\n\nconst Item = styled.span``;\n\nconst Divider = styled.span`\n  margin: 0px 10px;\n`;\n\nconst Overview = styled.p`\n  font-size: 12px;\n  color: rgba(255, 255, 255, 0.7);\n  line-height: 1.5;\n  width: 50%;\n`;\n\nconst Trailer = styled.iframe`\n  margin-top: 10px;\n  padding: 0;\n  width: 50%;\n  height: 50%;\n  border-radius: 5px;\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.3);\n`;\n\nconst DetailPresenter = ({ result, videos, error, loading }) =>\n  loading ? (\n    <>\n      <Helmet>\n        <title>Loading | Jetflix</title>\n      </Helmet>\n      <Loader />\n    </>\n  ) : error ? (\n    <Message color=\"#e74c3c\" text={error} />\n  ) : (\n    <Container>\n      <Helmet>\n        <title>\n          {result.original_title ? result.original_title : result.original_name}{\" \"}\n          | Jetflix\n        </title>\n      </Helmet>\n      <Backdrop\n        bgImg={`https://image.tmdb.org/t/p/original/${result.backdrop_path}`}\n      ></Backdrop>\n      <Content>\n        <Cover\n          bgImg={\n            result.poster_path\n              ? `https://image.tmdb.org/t/p/original/${result.poster_path}`\n              : require(\"../../Assets/noPosterSmall.png\")\n          }\n        ></Cover>\n        <Data>\n          <Title>\n            {result.original_title\n              ? result.original_title\n              : result.original_name}\n          </Title>\n          <ItemContainer>\n            <Item>\n              {result.release_date\n                ? result.release_date.substring(0, 4)\n                : result.first_air_date.substring(0, 4)}\n            </Item>\n            <Divider>·</Divider>\n            <Item>\n              {result.runtime ? result.runtime : result.episode_run_time[0]} min\n            </Item>\n            <Divider>·</Divider>\n            <Item>\n              {result.genres &&\n                result.genres.map((genre, index) =>\n                  index === result.genres.length - 1\n                    ? genre.name\n                    : `${genre.name} / `\n                )}\n            </Item>\n          </ItemContainer>\n          <Overview>{result.overview}</Overview>\n          <Trailer\n            src={`https://www.youtube.com/embed/${videos[0].key}`}\n          ></Trailer>\n        </Data>\n      </Content>\n    </Container>\n  );\n\nDetailPresenter.propTypes = {\n  result: PropTypes.object,\n  videos: PropTypes.array,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n};\n\nexport default DetailPresenter;\n","import DetailContainer from \"./DetailContainer\";\n\nexport default DetailContainer;\n","import React from \"react\";\nimport DetailPresenter from \"./DetailPresenter\";\nimport { moviesApi, tvApi } from \"../../api\";\n\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n    const {\n      location: { pathname },\n    } = props;\n    this.state = {\n      result: null,\n      videos: null,\n      error: null,\n      loading: true,\n      isMovie: pathname.includes(\"/movie/\"),\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      match: {\n        params: { id },\n      },\n      history: { push },\n    } = this.props;\n    const { isMovie } = this.state;\n    const parsedId = Number(id);\n    if (isNaN(parsedId)) {\n      return push(\"/\");\n    }\n    let result = null;\n    let videos = null;\n    try {\n      if (isMovie) {\n        ({\n          data: result,\n          data: {\n            videos: { results: videos },\n          },\n        } = await moviesApi.movieDetail(parsedId));\n      } else {\n        ({\n          data: result,\n          data: {\n            videos: { results: videos },\n          },\n        } = await tvApi.tvDetail(parsedId));\n      }\n      console.log(result);\n      console.log(videos);\n    } catch {\n      this.setState({ error: \"Can't find anything.\" });\n    } finally {\n      this.setState({ loading: false, result, videos });\n    }\n  }\n\n  render() {\n    const { result, videos, error, loading } = this.state;\n    return (\n      <DetailPresenter\n        result={result}\n        videos={videos}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from \"react-router-dom\";\nimport Header from \"Components/Header\";\nimport Home from \"Routes/Home\";\nimport TV from \"Routes/TV\";\nimport Search from \"Routes/Search\";\nimport Detail from \"Routes/Detail\";\n\nexport default () => (\n  <Router>\n    <>\n      <Header />\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/tv\" exact component={TV} />\n        <Route path=\"/search\" component={Search} />\n        <Route path=\"/movie/:id\" component={Detail} />\n        <Route path=\"/tv/:id\" component={Detail} />\n        <Redirect from=\"*\" to=\"/\" />\n      </Switch>\n    </>\n  </Router>\n);\n","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\nconst globalStyles = createGlobalStyle`\n    ${reset};\n    a{\n        text-decoration:none;\n        color:inherit;\n    }\n    *{\n        box-sizing:border-box;\n    }\n    body{\n        font-family:--apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n        font-size:12px;\n        background-color:rgba(20,20,20,1);\n        color:white;\n        padding-top:50px;\n    }\n`;\n\nexport default globalStyles;\n","import React from \"react\";\nimport Router from \"Components/Router\";\nimport GlobalStyles from \"Components/GlobalStyles\";\n\nfunction App() {\n  return (\n    <>\n      <Router />\n      <GlobalStyles />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"Components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}